#:import C kivy.utils.get_color_from_hex
#:import Window kivy.core.window.Window
#:import Factory kivy.factory.Factory

<AddButton>:
    canvas.before:
        #Color:
           # rgba: 25/255, 25/255, 25/255, .2
        Color:
            rgb: C("#3B3B3B")
        Ellipse:
            size: root.size[0] + dp(15), root.size[1] + dp(15)
            pos: root.pos[0] - dp(7.5), root.pos[1] - dp(7.5)
    source: "images/plus.png"
    size: root.size
    pos: root.pos


<SearchButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0] + dp(20), root.size[1] + dp(20)
            pos: root.pos[0] - dp(10), root.pos[1] - dp(10)
            radius: [dp(16)]
    background_color: 0, 0, 0, 0
    text: root.text
    color: root.color
    source: root.source

<SettingsButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0] + dp(20), root.size[1] + dp(20)
            pos: root.pos[0] - dp(10), root.pos[1] - dp(10)
            radius: [dp(16)]
    background_color: 0, 0, 0, 0
    text: root.text
    color: root.color

<SearchBar>:
    size_hint_y: None
    height: dp(40)
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0], root.size[1]
            pos: root.pos
            radius: [dp(20)]
    on_release: search_txt_input.focus = True
    SearchInput:
        id: search_txt_input
        hint_text: "Search by the keyword..."
        hint_text_color: C("#CCCCCC")
        font_name: "fonts/Nunito-Light.ttf"
        font_size: "16sp"
        multiline: False
        cursor_color: 1, 1, 1
        foreground_color: C("#CCCCCC")
        background_color: 0, 0, 0, 0
        pos: root.pos[0], root.pos[1] + self.height/2 - dp(13)
        size: root.size[0] - dp(30), self.minimum_height
        padding: dp(20), dp(6), dp(6), dp(6)


<RemoveNote>:
    canvas.before:
        Color:
            rgb: 1, 0, 0
        RoundedRectangle:
            size: root.size
            pos: root.pos
    Image:
        pos: root.pos[0] + root.width/2 - self.width/2, root.pos[1] + root.height/2 - self.height/2
        size: dp(48), dp(48)
        source: "images/delete.png"



<NotesLabel>:
    font_name: "fonts/Nunito-Regular.ttf"
    canvas.before:
        Color:
            rgb: self.bg_color
        RoundedRectangle:
            size: root.size
            pos: root.pos
    text: root.text
    color: [0, 0, 0]
    size_hint_y: None
    text_size: self.width, None
    #valign: "top"
    #height: self.texture_size[1]
    padding: dp(20), dp(30)

    on_release:
        app.root.children[0].ids.close_button.close_search_bar(
        app.root.children[0].ids.search_button,
        app.root.children[0].ids.settings_button,
        app.root.children[0].ids.text_notes,
        app.root.children[0].ids.toolbar,
        app.root.children[0],
        app.root.children[0].ids.search_bar
        )   # Before it changes to the screen note_editor, it closes the search bar

        # Changing screen
        #app.root.current = "note_editor"
        #app.root.children[0].ids.title_input.text = root.text
        #app.root.children[0].ids.body_input.text = root.body_txt


<SettingsPopup>:
    background_color: 0, 0, 0, 0
    background_normal: ""
    background: ""
    overlay_color: 191/255, 191/255, 191/255, .4
    foreground_color: 0, 0, 0, 0
    separator_height: dp(0)
    size_hint: (.9, .8) if Window.size == (320, 480) else (.9, .7)
    ScrollView:
        do_scroll_y: True
        canvas.before:
            Color:
                rgb: C("#252525")
            RoundedRectangle:
                size: self.size
                pos: self.pos
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            id: poprt
            orientation: "vertical"
            padding: (dp(40), dp(40)) if Window.size > (240, 320) else (dp(20), dp(40))
            spacing: dp(40)

            GridLayout:
                spacing: (dp(30), dp(40)) if Window.size > (240, 320) else (dp(10), dp(40))
                cols: 2
                Label:
                    font_size: "16dp"
                    font_name: "fonts/Nunito-Regular.ttf"
                    text: "Theme"
                    size_hint_y: None
                    height: dp(40)
                DarkModeDDMainButton:
                    id: darkmodedd_main_button
                    size_hint_y: None
                    height: dp(40)
                    on_release:
                        self.children[1].source = "images/chevron-down.png"
                        Factory.DarkModeDD().open(self)


<DarkModeDDMainButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            radius: [dp(15)]
            size: self.size
            pos: self.pos
        Rectangle:
            size: self.size[0], self.size[1]/2
            pos:self.pos
    Image:
        source: "images/chevron-left.png"
        pos: root.pos[0] + root.width - self.width, root.pos[1] + root.height/2 - self.height/2
        size_hint: None, None
        size: dp(24), dp(24)
    Label:
        text: app.setting_mode
        font_size: "16dp"
        font_name: "fonts/Nunito-Regular.ttf"
        pos: root.pos
        halign: "center"
        valign: "bottom"
        text_size: None, None
        width: root.width
        height: root.height


<DarkModeDDOptions@Button>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        Rectangle:
            size: root.size
            pos: root.pos
    text: root.text
    font_size: "16dp"
    font_name: "fonts/Nunito-Regular.ttf"
    background_color: 0, 0, 0, 0


<DarkModeDD>:
    DarkModeDDOptions:
        text: "Dark"
        size_hint_y: None
        height: dp(40)
        on_release:
            root.select([C("#252525"), [1, 1, 1], C("#9A9A9A")])
            app.setting_mode = "Dark"
    DarkModeDDOptions:
        text: "Light"
        size_hint_y: None
        height: dp(40)
        on_release:
            root.select([C("#ebebeb"), [0, 0, 0], C("#252525")])
            app.setting_mode = "Light"




        # Main screen

<Main>:
    id: main_page
    BoxLayout:
        id: wrap_box
        padding: dp(10), dp(30)
        orientation: "vertical"
        BoxLayout:
            padding: 0, 0, 0, dp(10)
            id: toolbar
            size_hint: 1, None
            height: dp(60)

            Label:
                id: text_notes
                text_size: self.size
                size: self.texture_size
               # valign: "center"
                font_size: "30dp"
                font_name: "fonts/Nunito-SemiBold.ttf"
                text: "Notes"
                color: app.color_text

            FloatLayout:

                SearchButton:
                    id: search_button
                    source: "images/magnify.png"
                    size_hint: None, None
                    size: dp(20), dp(20)
                    pos: toolbar.size[0] - self.size[0]*2 - dp(40) + wrap_box.padding[0], toolbar.pos[1] + toolbar.padding[3] + dp(10)
                    on_release:
                        self.call_search_bar(close_button, settings_button, text_notes, toolbar, main_page, search_bar)


                SettingsButton:
                    id: settings_button
                    source: "images/cog.png"
                    size_hint: None, None
                    size: dp(20), dp(20)
                    pos: toolbar.size[0] - self.size[0] + wrap_box.padding[0] - dp(10), toolbar.pos[1] + toolbar.padding[3] + dp(10)
                    on_press: Factory.SettingsPopup().open()

                SearchBar:
                    id: search_bar
                    opacity: 0
                    size_hint_x: None
                    #width: toolbar.width
                    width: 0
                    #pos: root.center_x - self.width/2.0, root.height - self.height/2.0 - toolbar.height + toolbar.padding[3]
                    pos: root.center_x - self.width/2.0, root.height - self.height/2.0 - toolbar.height + toolbar.padding[3]
                    CloseButton:
                        id: close_button
                        source: "images/close.png"
                        size: dp(24), dp(24)
                        pos: self.parent.pos[0] + self.parent.width - self.width - dp(10), self.parent.pos[1] + dp(9)
                        on_release: self.close_search_bar(search_button, settings_button, text_notes, toolbar, main_page, search_bar)


        RV:
            id: rv
            viewclass: "NotesLabel"
            RecycleBoxLayout:
                id: notes_list
                default_size_hint: 1, None
                default_size: None, dp(50)
                spacing: dp(15)
                size_hint_y: None
                height: self.minimum_height
                orientation: "vertical"

    FloatLayout:
        AddButton:
            size_hint: None, None
            size: dp(35), dp(35)
            #pos: wrap_box.size[0] - self.width - wrap_box.padding[0]*1.7, 80
            pos: root.size[0] - self.width*2, 0 + self.height
            on_release:

                app.root.current = "note_editor"
                app.root.children[0].ids.title_input.text = ""
                app.root.children[0].ids.title_input.disabled = False

                app.root.children[0].ids.title_input.note_id_num = 0 # Always start new note with id 0

                app.root.children[0].ids.body_input.text = ""
                app.root.children[0].ids.body_input.disabled = False

                #app.root.children[0].ids.go_back_button.title_opened = ""
                #app.root.children[0].ids.go_back_button.body_opened = ""
                #app.root.children[0].ids.go_back_button.note_id_num = 0


<GoBackButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0] - dp(4), root.size[1] - dp(4)
            pos: root.pos[0] + dp(2), root.pos[1] + dp(2)
            radius: [dp(16)]
    background_color: 0, 0, 0, 0
    text: root.text
    color: root.color

<ViewModeButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0] + dp(20), root.size[1] + dp(20)
            pos: root.pos[0] - dp(10), root.pos[1] - dp(10)
            radius: [dp(16)]
    background_color: 0, 0, 0, 0
    text: root.text
    color: root.color

<SaveButton>:
    canvas.before:
        Color:
            rgb: C("#3B3B3B")
        RoundedRectangle:
            size: root.size[0] + dp(20), root.size[1] + dp(20)
            pos: root.pos[0] - dp(10), root.pos[1] - dp(10)

            radius: [dp(16)]
    background_color: 0, 0, 0, 0
    text: root.text
    color: root.color


<TitleInput>:
    hint_text: "Title"
    hint_text_color: app.color_text_hint
    font_size: "35dp"
    #size_hint: 1, None
    #height: self.minimum_height
    font_name: "fonts/Nunito-Regular.ttf"
    write_tab: False
    background_color: 0, 0, 0, 0
    foreground_color: app.color_text
    disabled_foreground_color: C("#9A9A9A")
    cursor_color: 1, 1, 1

<BodyTextInput>:
    font_size: "15dp"
    font_name: "fonts/Nunito-Regular.ttf"
    hint_text: 'Type something...'
    hint_text_color: app.color_text_hint
    #size_hint_y: None
    #height: self.minimum_height
    background_color: 0, 0, 0, 0
    foreground_color: app.color_text
    disabled_foreground_color: C("#9A9A9A")
    cursor_color: 1, 1, 1


<DiscardPopup>:
    #canvas.before:
       # Color:
          #  rgb: 1, 0, 0
       # RoundedRectangle:
           # size: self.size
          #  pos: self.pos
    background_color: 0, 0, 0, 0
    background_normal: ""
    background: ""
    overlay_color: 191/255, 191/255, 191/255, .4
    foreground_color: 0, 0, 0, 0
    separator_height: dp(0)
    size_hint: (.9, .5) if Window.size == (320, 480) else (.9, .3)
    BoxLayout:
        orientation: "vertical"
        padding: dp(40), 0
        canvas.before:
            Color:
                rgb: C("#252525")
            RoundedRectangle:
                size: self.size
                pos: self.pos
        Widget:
            size_hint_y: None
            height: dp(60)
        Label:
            text: "Are you sure you want to discard your changes ?"
            font_size: "23dp"
            font_name: "fonts/Nunito-Regular.ttf"
            color: C("#CFCFCF")
            text_size: self.width, None
            height: self.texture_size[1]
            halign: "center"
            size_hint_y: None
        BoxLayout:
            spacing: dp(30)
            padding: 0, 0, 0, dp(10)
            AnchorLayout:
                anchor_x: "right"
                DiscardButton:
                    on_release:
                        app.root.current = "main"
                        root.dismiss()
            AnchorLayout:
                anchor_x: "left"
                KeepButton:
                    on_release:
                        app.root.current = "main"
                        root.dismiss()
    FloatLayout:
        Image:
            source: "images/alert-circle.png"
            size_hint: None, None
            size: [dp(34), dp(34)]
            pos: [root.pos[0] + root.size[0]/2 - self.width/2, root.pos[1] + root.size[1] - self.height - dp(20)]


<SavePopup>:
    background_color: 0, 0, 0, 0
    background_normal: ""
    background: ""
    overlay_color: 191/255, 191/255, 191/255, .4
    foreground_color: 0, 0, 0, 0
    separator_height: dp(0)
    size_hint: (.9, .5) if Window.size == (320, 480) else (.9, .3)
    BoxLayout:
        orientation: "vertical"
        padding: dp(40), 0
        canvas.before:
            Color:
                rgb: C("#252525")
            RoundedRectangle:
                size: self.size
                pos: self.pos
        Widget:
            size_hint_y: None
            height: dp(80)
        Label:
            text: "Save changes ?"
            font_size: "23dp"
            font_name: "fonts/Nunito-Regular.ttf"
            color: C("#CFCFCF")
            text_size: self.width, None
            height: self.texture_size[1]
            halign: "center"
            size_hint_y: None
        BoxLayout:
            spacing: dp(30)
            padding: 0, 0, 0, dp(10)
            AnchorLayout:
                anchor_x: "right"
                DiscardButton:
                    on_release: root.dismiss()
            AnchorLayout:
                anchor_x: "left"
                KeepButton:
                    text: "Save"
                    on_release:
                        root.save_note(app.root.children[0].ids.title_input.text,
                        app.root.children[0].ids.body_input.text)

                        root.dismiss()
    FloatLayout:
        Image:
            source: "images/alert-circle.png"
            size_hint: None, None
            size: [dp(34), dp(34)]
            pos: [root.pos[0] + root.size[0]/2 - self.width/2, root.pos[1] + root.size[1] - self.height - dp(30)]


<DiscardButton>:
    canvas.before:
        Color:
            rgb: C("#FF0000")
        RoundedRectangle:
            size: root.size
            pos: root.pos
            radius: [dp(5), ]
    background_color: 0, 0, 0, 0
    size_hint: None, None
    size: [dp(112), dp(39)]
    text: "Discard"
    font_name: "fonts/Nunito-Regular.ttf"
    font_size: "18dp"


<KeepButton>:
    canvas.before:
        Color:
            rgb: C("#30BE71")
        RoundedRectangle:
            size: root.size
            pos: root.pos
            radius: [dp(5), ]
    background_color: 0, 0, 0, 0
    size_hint: None, None
    size: [dp(112), dp(39)]
    text: "Keep"
    font_name: "fonts/Nunito-Regular.ttf"
    font_size: "18dp"



        # Note editor screen

<NoteEditor>:
    BoxLayout:
        id: wrap_box_editor
        orientation: "vertical"
        padding: dp(10), dp(30)
        BoxLayout:
            id: toolbar_editor
            size_hint_y: None
            height: dp(60)
            padding: 0, 0, 0, dp(10)
            FloatLayout:
                GoBackButton:
                    id: go_back_button
                    source: "images/chevron-left.png"
                    size_hint: None, None
                    size: dp(48), dp(48)
                    pos: dp(20) - dp(11), toolbar_editor.pos[1] + toolbar_editor.padding[3] - dp(2)
                    on_release:
                        self.check_inputs(title_input, body_input, Factory.DiscardPopup())


                ViewModeButton:
                    source: "images/eye-outline.png"
                    size_hint: None, None
                    size: dp(24), dp(24)
                    #pos: toolbar_editor.size[0] - self.size[0]*2 + wrap_box_editor.padding[0] - dp(10), toolbar_editor.pos[1] + toolbar_editor.padding[3] + dp(10)
                    pos: toolbar_editor.size[0] - self.size[0]*2 - dp(40) + wrap_box_editor.padding[0], toolbar_editor.pos[1] + toolbar_editor.padding[3] + dp(10)

                    on_release:
                        title_input.disabled = True if title_input.disabled == False else False
                        body_input.disabled = True if body_input.disabled == False else False


                SaveButton:
                    id: save_button
                    source: "images/content-save-outline.png" if self.disabled == False else "images/content-save-outline-gray.png"
                    size_hint: None, None
                    disabled: True if title_input.text == "" else False
                    size: dp(24), dp(24)
                    pos: toolbar_editor.size[0] - self.size[0] + wrap_box_editor.padding[0] - dp(10), toolbar_editor.pos[1] + toolbar_editor.padding[3] + dp(10)
                    on_release: Factory.SavePopup().open()



        BoxLayout:
            orientation: "vertical"
            TitleInput:
                id: title_input
                #on_focus: print(self.note_id_num)
            BodyTextInput:
                id: body_input
                size_hint_y: 1.8
